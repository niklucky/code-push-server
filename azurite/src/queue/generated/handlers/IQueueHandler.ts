/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
// tslint:disable:max-line-length

import * as Models from "../artifacts/models";
import Context from "../Context";

export default interface IQueueHandler {
  create(options: Models.QueueCreateOptionalParams, context: Context): Promise<Models.QueueCreateResponse>;
  delete(options: Models.QueueDeleteMethodOptionalParams, context: Context): Promise<Models.QueueDeleteResponse>;
  getProperties(options: Models.QueueGetPropertiesOptionalParams, context: Context): Promise<Models.QueueGetPropertiesResponse>;
  getPropertiesWithHead(options: Models.QueueGetPropertiesWithHeadOptionalParams, context: Context): Promise<Models.QueueGetPropertiesWithHeadResponse>;
  setMetadata(options: Models.QueueSetMetadataOptionalParams, context: Context): Promise<Models.QueueSetMetadataResponse>;
  getAccessPolicy(options: Models.QueueGetAccessPolicyOptionalParams, context: Context): Promise<Models.QueueGetAccessPolicyResponse>;
  getAccessPolicyWithHead(options: Models.QueueGetAccessPolicyWithHeadOptionalParams, context: Context): Promise<Models.QueueGetAccessPolicyWithHeadResponse>;
  setAccessPolicy(options: Models.QueueSetAccessPolicyOptionalParams, context: Context): Promise<Models.QueueSetAccessPolicyResponse>;
}
